{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Code/dating-ai-frontend/src/components/Conversation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Stack, Heading, Flex } from \"@chakra-ui/react\";\nimport Message from \"../components/Message\";\nimport MessageOptions from \"../components/MessageOptions\";\nimport { getPickUpLine, getRoot } from '../Api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Conversation = () => {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [options, setOptions] = useState([]);\n  useEffect(async () => {\n    if (options.length === 0) {\n      await fetchOptions();\n    }\n  }, []);\n  const handleOptionSelection = option => {\n    fetchOptions(option);\n    setHistory([...history, option]);\n  };\n  const fetchOptions = async selectedOption => {\n    // Request\n    // let data = await getPickUpLine({\n    //     \"profile1\": {\"name\":\"Cathreen\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n    //     \"profile2\": {\"name\":\"Paul\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n    //     \"reply_to\": null,\n    //     \"msg_attr\": [\n    //         \"witty\",\n    //         \"funny\",\n    //         \"curious to know about each other\"\n    //     ],\n    //     \"history\": []\n    // });\n\n    const data = Api.getPickUpLine();\n    setOptions(data['choices']);\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    w: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      size: \"lg\",\n      children: \"Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      gap: 2,\n      w: \"100%\",\n      children: [history.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        isUser: index % 2 === 0,\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(MessageOptions, {\n        options: options,\n        onSelect: handleOptionSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Conversation, \"0xI5/oKJQT86uw7B/85PoYRc03o=\");\n_c = Conversation;\nexport default Conversation;\nclass Api {\n  static getPickUpLine() {\n    console.log(Api.COUNT);\n    let response = null;\n    switch (Api.COUNT) {\n      case 0:\n        response = Api.getFirstResponse();\n        break;\n      case 1:\n        response = Api.getSecondResponse();\n        break;\n      case 2:\n        response = Api.getThirdResponse();\n        break;\n      case 3:\n        response = Api.getFourthResponse();\n        break;\n    }\n    Api.COUNT++;\n    return response;\n  }\n  static getFirstResponse() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"reply_to\": null,\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": [],\n      \"choices\": [\"Noodles for dinner? Sounds like a plan!\", \"So, we have the same profession and same favorite food..guess we have more in common than we thought!\", \"What's the engineering project you're working on right now? Let's see who can solve it first!\"]\n    };\n  }\n  static getSecondResponse() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"reply_to\": \"p1\",\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": {\n        \"p1\": \"Noodles for dinner? Sounds like a plan!\"\n      },\n      \"choices\": [\"I heard engineers like a challenge.. care to take one on?\", \"Wanna grab some noodles and chat about engineering?\", \"I think I found my engineering soulmate!\"]\n    };\n  }\n  static getThirdResponse() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"reply_to\": \"p2\",\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": {\n        \"p1\": \"Noodles for dinner? Sounds like a plan!\",\n        \"p2\": \"I think I found my engineering soulmate!\"\n      },\n      \"choices\": [\"Definitely!\", \"Yup!\", \"Of course!\"]\n    };\n  }\n  static getFourthResponse() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"reply_to\": \"p1\",\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": {\n        \"p1\": \"Noodles for dinner? Sounds like a plan!\",\n        \"p2\": \"I think I found my engineering soulmate!\",\n        \"p1\": \"Definitely!\"\n      },\n      \"choices\": [\"And now?\", \"Bla!\", \"Hahah..\"]\n    };\n  }\n}\nApi.COUNT = 0;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useState","useEffect","Stack","Heading","Flex","Message","MessageOptions","getPickUpLine","getRoot","jsxDEV","_jsxDEV","Conversation","_s","history","setHistory","options","setOptions","length","fetchOptions","handleOptionSelection","option","selectedOption","data","Api","spacing","w","children","as","size","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","gap","map","message","index","isUser","onSelect","_c","console","log","COUNT","response","getFirstResponse","getSecondResponse","getThirdResponse","getFourthResponse","$RefreshReg$"],"sources":["/Users/julian/Code/dating-ai-frontend/src/components/Conversation.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Stack, Heading, Flex } from \"@chakra-ui/react\";\nimport Message from \"../components/Message\";\nimport MessageOptions from \"../components/MessageOptions\";\nimport { getPickUpLine, getRoot } from '../Api.js';\n\nconst Conversation = () => {\n  const [history, setHistory] = useState([]);\n  const [options, setOptions] = useState([]);\n\n  useEffect(async () => {\n    if (options.length === 0) {\n      await fetchOptions();\n    }\n  }, []);\n\n  const handleOptionSelection = (option) => {\n    fetchOptions(option);\n    setHistory([...history, option]);\n  };\n\n  const fetchOptions = async (selectedOption) => {\n    // Request\n    // let data = await getPickUpLine({\n    //     \"profile1\": {\"name\":\"Cathreen\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n    //     \"profile2\": {\"name\":\"Paul\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n    //     \"reply_to\": null,\n    //     \"msg_attr\": [\n    //         \"witty\",\n    //         \"funny\",\n    //         \"curious to know about each other\"\n    //     ],\n    //     \"history\": []\n    // });\n\n    const data = Api.getPickUpLine();\n    setOptions(data['choices']);\n  };\n\n  return (\n    <Stack spacing={2} w='100%'>\n      <Heading as='h2' size='lg'>Conversation</Heading>\n      <Flex flexDirection='column' gap={2} w='100%'>\n        {history.map((message, index) => (\n          <Message key={index} isUser={index % 2 === 0}>{message}</Message>\n        ))}\n        <MessageOptions options={options} onSelect={handleOptionSelection} />\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default Conversation;\n\nclass Api {\n    static COUNT = 0;\n\n    static getPickUpLine() {\n      console.log(Api.COUNT);\n      let response = null;\n      switch (Api.COUNT) {\n        case 0:\n          response = Api.getFirstResponse();\n          break;\n        case 1:\n          response = Api.getSecondResponse();\n          break;\n        case 2:\n          response = Api.getThirdResponse();\n          break;\n        case 3:\n          response = Api.getFourthResponse();\n          break;\n      }\n\n      Api.COUNT++;\n      return response;\n    }\n\n    static getFirstResponse() {\n        return {\n            \"profile1\": {\n                \"name\": \"Cathreen\",\n                \"profession\": \"engineer\",\n                \"favorite food\": \"noodles\"\n            },\n            \"profile2\": {\n                \"name\": \"Paul\",\n                \"profession\": \"engineer\",\n                \"favorite food\": \"noodles\"\n            },\n            \"reply_to\": null,\n            \"msg_attr\": [\n                \"witty\",\n                \"funny\",\n                \"curious to know about each other\"\n            ],\n            \"history\": [],\n            \"choices\": [\n              \"Noodles for dinner? Sounds like a plan!\",\n              \"So, we have the same profession and same favorite food..guess we have more in common than we thought!\",\n              \"What's the engineering project you're working on right now? Let's see who can solve it first!\",\n            ]\n        };\n    }\n\n    static getSecondResponse() {\n      return {\n          \"profile1\": {\n              \"name\": \"Cathreen\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"profile2\": {\n              \"name\": \"Paul\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"reply_to\": \"p1\",\n          \"msg_attr\": [\n              \"witty\",\n              \"funny\",\n              \"curious to know about each other\"\n          ],\n          \"history\": {\n            \"p1\": \"Noodles for dinner? Sounds like a plan!\"\n          },\n          \"choices\": [\n            \"I heard engineers like a challenge.. care to take one on?\",\n            \"Wanna grab some noodles and chat about engineering?\",\n            \"I think I found my engineering soulmate!\"\n          ]\n      };\n    }\n\n    static getThirdResponse() {\n      return {\n          \"profile1\": {\n              \"name\": \"Cathreen\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"profile2\": {\n              \"name\": \"Paul\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"reply_to\": \"p2\",\n          \"msg_attr\": [\n              \"witty\",\n              \"funny\",\n              \"curious to know about each other\"\n          ],\n          \"history\": {\n            \"p1\": \"Noodles for dinner? Sounds like a plan!\",\n            \"p2\": \"I think I found my engineering soulmate!\"\n          },\n          \"choices\": [\n            \"Definitely!\",\n            \"Yup!\",\n            \"Of course!\"\n          ]\n      };\n    }\n\n    static getFourthResponse() {\n      return {\n          \"profile1\": {\n              \"name\": \"Cathreen\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"profile2\": {\n              \"name\": \"Paul\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"reply_to\": \"p1\",\n          \"msg_attr\": [\n              \"witty\",\n              \"funny\",\n              \"curious to know about each other\"\n          ],\n          \"history\": {\n            \"p1\": \"Noodles for dinner? Sounds like a plan!\",\n            \"p2\": \"I think I found my engineering soulmate!\",\n            \"p1\": \"Definitely!\"\n          },\n          \"choices\": [\n            \"And now?\",\n            \"Bla!\",\n            \"Hahah..\"\n          ]\n      };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}