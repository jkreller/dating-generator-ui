{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Code/dating-ai-frontend/src/components/Conversation.jsx\";\nimport React, { Component } from \"react\";\nimport { Stack, Heading, Flex } from \"@chakra-ui/react\";\nimport Message from \"../components/Message\";\nimport MessageOptions from \"../components/MessageOptions\";\nimport { getPickUpLine, getRoot } from '../Api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Conversation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [],\n      options: []\n    };\n  }\n  async componentDidMount() {\n    const options = await this.fetchOptionsInitially();\n    this.setState({\n      options\n    });\n  }\n  async fetchOptionsInitially() {\n    // Request\n    // let data = await getPickUpLine({\n    //     \"profile1\": {\"name\":\"Cathreen\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n    //     \"profile2\": {\"name\":\"Paul\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n    //     \"reply_to\": null,\n    //     \"msg_attr\": [\n    //         \"witty\",\n    //         \"funny\",\n    //         \"curious to know about each other\"\n    //     ],\n    //     \"history\": []\n    // });\n\n    const data = await Api.getPickUpLine();\n    return data['choices'];\n  }\n  async fetchOptions(selectedOption) {\n    const data = await Api.getPickUpLine();\n    const options = data['choices'];\n    this.setState({\n      options,\n      history: [...this.state.history, selectedOption]\n    });\n  }\n  handleOptionSelection(option) {\n    this.fetchOptions(option);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      w: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"lg\",\n        children: \"Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        gap: 2,\n        w: \"100%\",\n        children: [this.state.history.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n          isUser: index % 2 === 0,\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(MessageOptions, {\n          options: this.state.options,\n          onSelect: this.handleOptionSelection.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Conversation;\nclass Api {\n  static async getPickUpLine() {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    let response = null;\n    switch (Api.COUNT) {\n      case 0:\n        response = Api.getFirstResponse();\n        break;\n      case 1:\n        response = Api.getSecondResponse();\n        break;\n      case 2:\n        response = Api.getThirdResponse();\n        break;\n      case 3:\n        response = Api.getFourthResponse();\n        break;\n    }\n    Api.COUNT++;\n    return response;\n  }\n  static getFirstResponse() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"reply_to\": null,\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": [],\n      \"choices\": [\"Noodles for dinner? Sounds like a plan!\", \"So, we have the same profession and same favorite food..guess we have more in common than we thought!\", \"What's the engineering project you're working on right now? Let's see who can solve it first!\"]\n    };\n  }\n  static getSecondResponse() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"reply_to\": \"p1\",\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": {\n        \"p1\": \"Noodles for dinner? Sounds like a plan!\"\n      },\n      \"choices\": [\"I heard engineers like a challenge.. care to take one on?\", \"Wanna grab some noodles and chat about engineering?\", \"I think I found my engineering soulmate!\"]\n    };\n  }\n  static getThirdResponse() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"reply_to\": \"p2\",\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": {\n        \"p1\": \"Noodles for dinner? Sounds like a plan!\",\n        \"p2\": \"I think I found my engineering soulmate!\"\n      },\n      \"choices\": [\"Definitely!\", \"Yup!\", \"Of course!\"]\n    };\n  }\n  static getFourthResponse() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"reply_to\": \"p1\",\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": {\n        \"p1\": \"Noodles for dinner? Sounds like a plan!\",\n        \"p2\": \"I think I found my engineering soulmate!\",\n        \"p1\": \"Definitely!\"\n      },\n      \"choices\": [\"And now?\", \"Bla!\", \"Hahah..\"]\n    };\n  }\n}\nApi.COUNT = 0;","map":{"version":3,"names":["React","Component","Stack","Heading","Flex","Message","MessageOptions","getPickUpLine","getRoot","jsxDEV","_jsxDEV","Conversation","constructor","props","state","history","options","componentDidMount","fetchOptionsInitially","setState","data","Api","fetchOptions","selectedOption","handleOptionSelection","option","render","spacing","w","children","as","size","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","gap","map","message","index","isUser","onSelect","bind","Promise","resolve","setTimeout","response","COUNT","getFirstResponse","getSecondResponse","getThirdResponse","getFourthResponse"],"sources":["/Users/julian/Code/dating-ai-frontend/src/components/Conversation.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Stack, Heading, Flex } from \"@chakra-ui/react\";\nimport Message from \"../components/Message\";\nimport MessageOptions from \"../components/MessageOptions\";\nimport { getPickUpLine, getRoot } from '../Api.js';\n\nclass Conversation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: [],\n      options: [],\n    };\n  }\n\n  async componentDidMount() {\n    const options = await this.fetchOptionsInitially();\n      this.setState({ options });\n  }\n\n  async fetchOptionsInitially() {\n    // Request\n    // let data = await getPickUpLine({\n    //     \"profile1\": {\"name\":\"Cathreen\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n    //     \"profile2\": {\"name\":\"Paul\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n    //     \"reply_to\": null,\n    //     \"msg_attr\": [\n    //         \"witty\",\n    //         \"funny\",\n    //         \"curious to know about each other\"\n    //     ],\n    //     \"history\": []\n    // });\n\n    const data = await Api.getPickUpLine();\n    return data['choices'];\n  }\n\n  async fetchOptions(selectedOption) {\n    const data = await Api.getPickUpLine();\n    const options = data['choices'];\n    this.setState({\n      options,\n      history: [...this.state.history, selectedOption],\n    });\n  }\n\n  handleOptionSelection(option) {\n    this.fetchOptions(option);\n  }\n\n  render() {\n    return (\n      <Stack spacing={2} w='100%'>\n        <Heading as='h2' size='lg'>\n          Conversation\n        </Heading>\n        <Flex flexDirection='column' gap={2} w='100%'>\n          {this.state.history.map((message, index) => (\n            <Message key={index} isUser={index % 2 === 0}>\n              {message}\n            </Message>\n          ))}\n          <MessageOptions\n            options={this.state.options}\n            onSelect={this.handleOptionSelection.bind(this)}\n          />\n        </Flex>\n      </Stack>\n    );\n  }\n}\n\nexport default Conversation;\n\nclass Api {\n    static COUNT = 0;\n\n    static async getPickUpLine() {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      let response = null;\n      switch (Api.COUNT) {\n        case 0:\n          response = Api.getFirstResponse();\n          break;\n        case 1:\n          response = Api.getSecondResponse();\n          break;\n        case 2:\n          response = Api.getThirdResponse();\n          break;\n        case 3:\n          response = Api.getFourthResponse();\n          break;\n      }\n\n      Api.COUNT++;\n      return response;\n    }\n\n    static getFirstResponse() {\n        return {\n            \"profile1\": {\n                \"name\": \"Cathreen\",\n                \"profession\": \"engineer\",\n                \"favorite food\": \"noodles\"\n            },\n            \"profile2\": {\n                \"name\": \"Paul\",\n                \"profession\": \"engineer\",\n                \"favorite food\": \"noodles\"\n            },\n            \"reply_to\": null,\n            \"msg_attr\": [\n                \"witty\",\n                \"funny\",\n                \"curious to know about each other\"\n            ],\n            \"history\": [],\n            \"choices\": [\n              \"Noodles for dinner? Sounds like a plan!\",\n              \"So, we have the same profession and same favorite food..guess we have more in common than we thought!\",\n              \"What's the engineering project you're working on right now? Let's see who can solve it first!\",\n            ]\n        };\n    }\n\n    static getSecondResponse() {\n      return {\n          \"profile1\": {\n              \"name\": \"Cathreen\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"profile2\": {\n              \"name\": \"Paul\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"reply_to\": \"p1\",\n          \"msg_attr\": [\n              \"witty\",\n              \"funny\",\n              \"curious to know about each other\"\n          ],\n          \"history\": {\n            \"p1\": \"Noodles for dinner? Sounds like a plan!\"\n          },\n          \"choices\": [\n            \"I heard engineers like a challenge.. care to take one on?\",\n            \"Wanna grab some noodles and chat about engineering?\",\n            \"I think I found my engineering soulmate!\"\n          ]\n      };\n    }\n\n    static getThirdResponse() {\n      return {\n          \"profile1\": {\n              \"name\": \"Cathreen\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"profile2\": {\n              \"name\": \"Paul\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"reply_to\": \"p2\",\n          \"msg_attr\": [\n              \"witty\",\n              \"funny\",\n              \"curious to know about each other\"\n          ],\n          \"history\": {\n            \"p1\": \"Noodles for dinner? Sounds like a plan!\",\n            \"p2\": \"I think I found my engineering soulmate!\"\n          },\n          \"choices\": [\n            \"Definitely!\",\n            \"Yup!\",\n            \"Of course!\"\n          ]\n      };\n    }\n\n    static getFourthResponse() {\n      return {\n          \"profile1\": {\n              \"name\": \"Cathreen\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"profile2\": {\n              \"name\": \"Paul\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"reply_to\": \"p1\",\n          \"msg_attr\": [\n              \"witty\",\n              \"funny\",\n              \"curious to know about each other\"\n          ],\n          \"history\": {\n            \"p1\": \"Noodles for dinner? Sounds like a plan!\",\n            \"p2\": \"I think I found my engineering soulmate!\",\n            \"p1\": \"Definitely!\"\n          },\n          \"choices\": [\n            \"And now?\",\n            \"Bla!\",\n            \"Hahah..\"\n          ]\n      };\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,KAAK,EAAEC,OAAO,EAAEC,IAAI,QAAQ,kBAAkB;AACvD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,aAAa,EAAEC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,SAASV,SAAS,CAAC;EACnCW,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACXC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX,CAAC;EACH;EAEA,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,MAAMD,OAAO,GAAG,MAAM,IAAI,CAACE,qBAAqB,EAAE;IAChD,IAAI,CAACC,QAAQ,CAAC;MAAEH;IAAQ,CAAC,CAAC;EAC9B;EAEA,MAAME,qBAAqBA,CAAA,EAAG;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAME,IAAI,GAAG,MAAMC,GAAG,CAACd,aAAa,EAAE;IACtC,OAAOa,IAAI,CAAC,SAAS,CAAC;EACxB;EAEA,MAAME,YAAYA,CAACC,cAAc,EAAE;IACjC,MAAMH,IAAI,GAAG,MAAMC,GAAG,CAACd,aAAa,EAAE;IACtC,MAAMS,OAAO,GAAGI,IAAI,CAAC,SAAS,CAAC;IAC/B,IAAI,CAACD,QAAQ,CAAC;MACZH,OAAO;MACPD,OAAO,EAAE,CAAC,GAAG,IAAI,CAACD,KAAK,CAACC,OAAO,EAAEQ,cAAc;IACjD,CAAC,CAAC;EACJ;EAEAC,qBAAqBA,CAACC,MAAM,EAAE;IAC5B,IAAI,CAACH,YAAY,CAACG,MAAM,CAAC;EAC3B;EAEAC,MAAMA,CAAA,EAAG;IACP,oBACEhB,OAAA,CAACR,KAAK;MAACyB,OAAO,EAAE,CAAE;MAACC,CAAC,EAAC,MAAM;MAAAC,QAAA,gBACzBnB,OAAA,CAACP,OAAO;QAAC2B,EAAE,EAAC,IAAI;QAACC,IAAI,EAAC,IAAI;QAAAF,QAAA,EAAC;MAE3B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU,eACVzB,OAAA,CAACN,IAAI;QAACgC,aAAa,EAAC,QAAQ;QAACC,GAAG,EAAE,CAAE;QAACT,CAAC,EAAC,MAAM;QAAAC,QAAA,GAC1C,IAAI,CAACf,KAAK,CAACC,OAAO,CAACuB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACrC9B,OAAA,CAACL,OAAO;UAAaoC,MAAM,EAAED,KAAK,GAAG,CAAC,KAAK,CAAE;UAAAX,QAAA,EAC1CU;QAAO,GADIC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAGpB,CAAC,eACFzB,OAAA,CAACJ,cAAc;UACbU,OAAO,EAAE,IAAI,CAACF,KAAK,CAACE,OAAQ;UAC5B0B,QAAQ,EAAE,IAAI,CAAClB,qBAAqB,CAACmB,IAAI,CAAC,IAAI;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAChD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAEZ;AACF;AAEA,eAAexB,YAAY;AAE3B,MAAMU,GAAG,CAAC;EAGN,aAAad,aAAaA,CAAA,EAAG;IAC3B,MAAM,IAAIqC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;IACzD,IAAIE,QAAQ,GAAG,IAAI;IACnB,QAAQ1B,GAAG,CAAC2B,KAAK;MACf,KAAK,CAAC;QACJD,QAAQ,GAAG1B,GAAG,CAAC4B,gBAAgB,EAAE;QACjC;MACF,KAAK,CAAC;QACJF,QAAQ,GAAG1B,GAAG,CAAC6B,iBAAiB,EAAE;QAClC;MACF,KAAK,CAAC;QACJH,QAAQ,GAAG1B,GAAG,CAAC8B,gBAAgB,EAAE;QACjC;MACF,KAAK,CAAC;QACJJ,QAAQ,GAAG1B,GAAG,CAAC+B,iBAAiB,EAAE;QAClC;IAAM;IAGV/B,GAAG,CAAC2B,KAAK,EAAE;IACX,OAAOD,QAAQ;EACjB;EAEA,OAAOE,gBAAgBA,CAAA,EAAG;IACtB,OAAO;MACH,UAAU,EAAE;QACR,MAAM,EAAE,UAAU;QAClB,YAAY,EAAE,UAAU;QACxB,eAAe,EAAE;MACrB,CAAC;MACD,UAAU,EAAE;QACR,MAAM,EAAE,MAAM;QACd,YAAY,EAAE,UAAU;QACxB,eAAe,EAAE;MACrB,CAAC;MACD,UAAU,EAAE,IAAI;MAChB,UAAU,EAAE,CACR,OAAO,EACP,OAAO,EACP,kCAAkC,CACrC;MACD,SAAS,EAAE,EAAE;MACb,SAAS,EAAE,CACT,yCAAyC,EACzC,uGAAuG,EACvG,+FAA+F;IAErG,CAAC;EACL;EAEA,OAAOC,iBAAiBA,CAAA,EAAG;IACzB,OAAO;MACH,UAAU,EAAE;QACR,MAAM,EAAE,UAAU;QAClB,YAAY,EAAE,UAAU;QACxB,eAAe,EAAE;MACrB,CAAC;MACD,UAAU,EAAE;QACR,MAAM,EAAE,MAAM;QACd,YAAY,EAAE,UAAU;QACxB,eAAe,EAAE;MACrB,CAAC;MACD,UAAU,EAAE,IAAI;MAChB,UAAU,EAAE,CACR,OAAO,EACP,OAAO,EACP,kCAAkC,CACrC;MACD,SAAS,EAAE;QACT,IAAI,EAAE;MACR,CAAC;MACD,SAAS,EAAE,CACT,2DAA2D,EAC3D,qDAAqD,EACrD,0CAA0C;IAEhD,CAAC;EACH;EAEA,OAAOC,gBAAgBA,CAAA,EAAG;IACxB,OAAO;MACH,UAAU,EAAE;QACR,MAAM,EAAE,UAAU;QAClB,YAAY,EAAE,UAAU;QACxB,eAAe,EAAE;MACrB,CAAC;MACD,UAAU,EAAE;QACR,MAAM,EAAE,MAAM;QACd,YAAY,EAAE,UAAU;QACxB,eAAe,EAAE;MACrB,CAAC;MACD,UAAU,EAAE,IAAI;MAChB,UAAU,EAAE,CACR,OAAO,EACP,OAAO,EACP,kCAAkC,CACrC;MACD,SAAS,EAAE;QACT,IAAI,EAAE,yCAAyC;QAC/C,IAAI,EAAE;MACR,CAAC;MACD,SAAS,EAAE,CACT,aAAa,EACb,MAAM,EACN,YAAY;IAElB,CAAC;EACH;EAEA,OAAOC,iBAAiBA,CAAA,EAAG;IACzB,OAAO;MACH,UAAU,EAAE;QACR,MAAM,EAAE,UAAU;QAClB,YAAY,EAAE,UAAU;QACxB,eAAe,EAAE;MACrB,CAAC;MACD,UAAU,EAAE;QACR,MAAM,EAAE,MAAM;QACd,YAAY,EAAE,UAAU;QACxB,eAAe,EAAE;MACrB,CAAC;MACD,UAAU,EAAE,IAAI;MAChB,UAAU,EAAE,CACR,OAAO,EACP,OAAO,EACP,kCAAkC,CACrC;MACD,SAAS,EAAE;QACT,IAAI,EAAE,yCAAyC;QAC/C,IAAI,EAAE,0CAA0C;QAChD,IAAI,EAAE;MACR,CAAC;MACD,SAAS,EAAE,CACT,UAAU,EACV,MAAM,EACN,SAAS;IAEf,CAAC;EACH;AACJ;AA7IM/B,GAAG,CACE2B,KAAK,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}