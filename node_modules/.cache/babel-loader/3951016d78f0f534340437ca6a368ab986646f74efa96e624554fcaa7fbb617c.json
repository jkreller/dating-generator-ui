{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Code/dating-ai-frontend/src/components/Conversation.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Stack, Heading, Flex, Spinner } from \"@chakra-ui/react\";\nimport Message from \"../components/Message\";\nimport MessageChoices from \"../components/MessageChoices\";\nimport { getPickUpLine } from '../Api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Conversation() {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [choices, setChoices] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetchChoices(null, abortController);\n    return () => abortController.abort();\n  }, []);\n  async function fetchChoices(selectedChoice, abortController) {\n    const {\n      choices\n    } = await getPickUpLine({\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"sender\": \"p1\",\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": history\n    }, abortController);\n    if (choices) {\n      setChoices(choices);\n      if (selectedChoice) {\n        setHistory(prevHistory => [...prevHistory, selectedChoice]);\n      }\n    }\n  }\n  function handleChoiceSelection(choice) {\n    fetchChoices(choice);\n  }\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    w: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      size: \"lg\",\n      children: \"Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      gap: 2,\n      w: \"100%\",\n      children: [history.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        isUser: index % 2 === 0,\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)), choices.length > 0 ? /*#__PURE__*/_jsxDEV(MessageChoices, {\n        choices: choices,\n        onSelect: handleChoiceSelection,\n        isUser: history.length % 2 === 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Conversation, \"uFFWU3ukW75w5AooEiUK6MoOCq0=\");\n_c = Conversation;\nexport default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["useState","useEffect","Stack","Heading","Flex","Spinner","Message","MessageChoices","getPickUpLine","jsxDEV","_jsxDEV","Conversation","_s","history","setHistory","choices","setChoices","abortController","AbortController","fetchChoices","abort","selectedChoice","prevHistory","handleChoiceSelection","choice","spacing","w","children","as","size","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","gap","map","message","index","isUser","length","onSelect","_c","$RefreshReg$"],"sources":["/Users/julian/Code/dating-ai-frontend/src/components/Conversation.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Stack, Heading, Flex, Spinner } from \"@chakra-ui/react\";\nimport Message from \"../components/Message\";\nimport MessageChoices from \"../components/MessageChoices\";\nimport { getPickUpLine } from '../Api.js';\n\nfunction Conversation() {\n  const [history, setHistory] = useState([]);\n  const [choices, setChoices] = useState([]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetchChoices(null, abortController);\n\n    return () => abortController.abort();\n  }, []);\n\n  async function fetchChoices(selectedChoice, abortController) {\n    const {choices} = await getPickUpLine({\n      \"profile1\": {\"name\":\"Cathreen\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n      \"profile2\": {\"name\":\"Paul\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n      \"sender\": \"p1\",\n      \"msg_attr\": [\n          \"witty\",\n          \"funny\",\n          \"curious to know about each other\"\n      ],\n      \"history\": history\n    }, abortController);\n\n    if (choices) {\n      setChoices(choices);\n\n      if (selectedChoice) {\n        setHistory(prevHistory => [...prevHistory, selectedChoice]);\n      }\n    }\n  }\n\n  function handleChoiceSelection(choice) {\n    fetchChoices(choice);\n  }\n\n  return (\n    <Stack spacing={2} w='100%'>\n      <Heading as='h2' size='lg'>Conversation</Heading>\n      <Flex flexDirection='column' gap={2} w='100%'>\n        {history.map((message, index) => (\n          <Message key={index} isUser={index % 2 === 0}>\n            {message}\n          </Message>\n        ))}\n        { choices.length > 0 ? <MessageChoices\n          choices={choices}\n          onSelect={handleChoiceSelection}\n          isUser={history.length % 2 === 0}\n        /> : <Spinner />}\n      </Flex>\n    </Stack>\n  );\n}\n\nexport default Conversation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}