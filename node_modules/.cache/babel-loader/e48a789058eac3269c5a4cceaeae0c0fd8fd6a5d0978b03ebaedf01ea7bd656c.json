{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Code/dating-ai-frontend/src/components/Conversation.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Stack, Heading, Flex } from \"@chakra-ui/react\";\nimport Message from \"../components/Message\";\nimport MessageOptions from \"../components/MessageOptions\";\nimport { getPickUpLine, getRoot } from '../Api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Conversation() {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [options, setOptions] = useState([]);\n  async function fetchOptionsInitially() {\n    Request;\n    const data = await getPickUpLine({\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"sender\": \"p1\",\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": []\n    });\n    return data['choices'];\n  }\n  async function fetchOptions(selectedOption) {\n    const data = await Api.getPickUpLine();\n    const options = data ? data.choices : [];\n    setOptions(options);\n    setHistory(prevHistory => [...prevHistory, selectedOption]);\n  }\n  useEffect(() => {\n    async function getOptions() {\n      const options = await fetchOptionsInitially();\n      setOptions(options);\n    }\n    getOptions();\n  }, []);\n  function handleOptionSelection(option) {\n    fetchOptions(option);\n  }\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    w: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      size: \"lg\",\n      children: \"Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      gap: 2,\n      w: \"100%\",\n      children: [history.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        isUser: index % 2 === 0,\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(MessageOptions, {\n        options: options,\n        onSelect: handleOptionSelection,\n        isUser: history.length % 2 === 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Conversation, \"0xI5/oKJQT86uw7B/85PoYRc03o=\");\n_c = Conversation;\nexport default Conversation;\nclass Api {\n  static async getPickUpLineInitially() {\n    Api.COUNT = 1;\n    return Api.getFirstResponse();\n  }\n  static async getPickUpLine() {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    let response = null;\n    switch (Api.COUNT) {\n      case 1:\n        response = Api.getSecondResponse();\n        break;\n      case 2:\n        response = Api.getThirdResponse();\n        break;\n      case 3:\n        response = Api.getFourthResponse();\n        break;\n    }\n    Api.COUNT++;\n    return response;\n  }\n  static getFirstResponse() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"sender\": \"p1\",\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": [],\n      \"choices\": [\"Noodles for dinner? Sounds like a plan!\", \"So, we have the same profession and same favorite food..guess we have more in common than we thought!\", \"What's the engineering project you're working on right now? Let's see who can solve it first!\"]\n    };\n  }\n  static getSecondResponse() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"sender\": \"p2\",\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": {\n        \"p1\": \"Noodles for dinner? Sounds like a plan!\"\n      },\n      \"choices\": [\"I heard engineers like a challenge.. care to take one on?\", \"Wanna grab some noodles and chat about engineering?\", \"I think I found my engineering soulmate!\"]\n    };\n  }\n  static getThirdResponse() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"sender\": \"p1\",\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": {\n        \"p1\": \"Noodles for dinner? Sounds like a plan!\",\n        \"p2\": \"I think I found my engineering soulmate!\"\n      },\n      \"choices\": [\"Definitely!\", \"Yup!\", \"Of course!\"]\n    };\n  }\n  static getFourthResponse() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"sender\": \"p2\",\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": {\n        \"p1\": \"Noodles for dinner? Sounds like a plan!\",\n        \"p2\": \"I think I found my engineering soulmate!\",\n        \"p1\": \"Definitely!\"\n      },\n      \"choices\": [\"And now?\", \"Bla!\", \"Hahah..\"]\n    };\n  }\n}\nApi.COUNT = 0;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["useState","useEffect","Stack","Heading","Flex","Message","MessageOptions","getPickUpLine","getRoot","jsxDEV","_jsxDEV","Conversation","_s","history","setHistory","options","setOptions","fetchOptionsInitially","Request","data","fetchOptions","selectedOption","Api","choices","prevHistory","getOptions","handleOptionSelection","option","spacing","w","children","as","size","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","gap","map","message","index","isUser","onSelect","length","_c","getPickUpLineInitially","COUNT","getFirstResponse","Promise","resolve","setTimeout","response","getSecondResponse","getThirdResponse","getFourthResponse","$RefreshReg$"],"sources":["/Users/julian/Code/dating-ai-frontend/src/components/Conversation.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Stack, Heading, Flex } from \"@chakra-ui/react\";\nimport Message from \"../components/Message\";\nimport MessageOptions from \"../components/MessageOptions\";\nimport { getPickUpLine, getRoot } from '../Api.js';\n\nfunction Conversation() {\n  const [history, setHistory] = useState([]);\n  const [options, setOptions] = useState([]);\n\n  async function fetchOptionsInitially() {\n    Request\n    const data = await getPickUpLine({\n        \"profile1\": {\"name\":\"Cathreen\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n        \"profile2\": {\"name\":\"Paul\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n        \"sender\": \"p1\",\n        \"msg_attr\": [\n            \"witty\",\n            \"funny\",\n            \"curious to know about each other\"\n        ],\n        \"history\": []\n    });\n\n    return data['choices'];\n  }\n\n  async function fetchOptions(selectedOption) {\n    const data = await Api.getPickUpLine();\n    const options = data ? data.choices : [];\n    setOptions(options);\n    setHistory(prevHistory => [...prevHistory, selectedOption]);\n  }\n\n  useEffect(() => {\n    async function getOptions() {\n      const options = await fetchOptionsInitially();\n      setOptions(options);\n    }\n    getOptions();\n  }, []);\n\n  function handleOptionSelection(option) {\n    fetchOptions(option);\n  }\n\n  return (\n    <Stack spacing={2} w='100%'>\n      <Heading as='h2' size='lg'>Conversation</Heading>\n      <Flex flexDirection='column' gap={2} w='100%'>\n        {history.map((message, index) => (\n          <Message key={index} isUser={index % 2 === 0}>\n            {message}\n          </Message>\n        ))}\n        <MessageOptions\n          options={options}\n          onSelect={handleOptionSelection}\n          isUser={history.length % 2 === 0}\n        />\n      </Flex>\n    </Stack>\n  );\n}\n\nexport default Conversation;\n\nclass Api {\n    static COUNT = 0;\n\n    static async getPickUpLineInitially() {\n      Api.COUNT = 1;\n      return Api.getFirstResponse();\n    }\n\n    static async getPickUpLine() {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      let response = null;\n      switch (Api.COUNT) {\n        case 1:\n          response = Api.getSecondResponse();\n          break;\n        case 2:\n          response = Api.getThirdResponse();\n          break;\n        case 3:\n          response = Api.getFourthResponse();\n          break;\n      }\n\n      Api.COUNT++;\n      return response;\n    }\n\n    static getFirstResponse() {\n        return {\n            \"profile1\": {\n                \"name\": \"Cathreen\",\n                \"profession\": \"engineer\",\n                \"favorite food\": \"noodles\"\n            },\n            \"profile2\": {\n                \"name\": \"Paul\",\n                \"profession\": \"engineer\",\n                \"favorite food\": \"noodles\"\n            },\n            \"sender\": \"p1\",\n            \"msg_attr\": [\n                \"witty\",\n                \"funny\",\n                \"curious to know about each other\"\n            ],\n            \"history\": [],\n            \"choices\": [\n              \"Noodles for dinner? Sounds like a plan!\",\n              \"So, we have the same profession and same favorite food..guess we have more in common than we thought!\",\n              \"What's the engineering project you're working on right now? Let's see who can solve it first!\",\n            ]\n        };\n    }\n\n    static getSecondResponse() {\n      return {\n          \"profile1\": {\n              \"name\": \"Cathreen\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"profile2\": {\n              \"name\": \"Paul\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"sender\": \"p2\",\n          \"msg_attr\": [\n              \"witty\",\n              \"funny\",\n              \"curious to know about each other\"\n          ],\n          \"history\": {\n            \"p1\": \"Noodles for dinner? Sounds like a plan!\"\n          },\n          \"choices\": [\n            \"I heard engineers like a challenge.. care to take one on?\",\n            \"Wanna grab some noodles and chat about engineering?\",\n            \"I think I found my engineering soulmate!\"\n          ]\n      };\n    }\n\n    static getThirdResponse() {\n      return {\n          \"profile1\": {\n              \"name\": \"Cathreen\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"profile2\": {\n              \"name\": \"Paul\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"sender\": \"p1\",\n          \"msg_attr\": [\n              \"witty\",\n              \"funny\",\n              \"curious to know about each other\"\n          ],\n          \"history\": {\n            \"p1\": \"Noodles for dinner? Sounds like a plan!\",\n            \"p2\": \"I think I found my engineering soulmate!\"\n          },\n          \"choices\": [\n            \"Definitely!\",\n            \"Yup!\",\n            \"Of course!\"\n          ]\n      };\n    }\n\n    static getFourthResponse() {\n      return {\n          \"profile1\": {\n              \"name\": \"Cathreen\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"profile2\": {\n              \"name\": \"Paul\",\n              \"profession\": \"engineer\",\n              \"favorite food\": \"noodles\"\n          },\n          \"sender\": \"p2\",\n          \"msg_attr\": [\n              \"witty\",\n              \"funny\",\n              \"curious to know about each other\"\n          ],\n          \"history\": {\n            \"p1\": \"Noodles for dinner? Sounds like a plan!\",\n            \"p2\": \"I think I found my engineering soulmate!\",\n            \"p1\": \"Definitely!\"\n          },\n          \"choices\": [\n            \"And now?\",\n            \"Bla!\",\n            \"Hahah..\"\n          ]\n      };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}