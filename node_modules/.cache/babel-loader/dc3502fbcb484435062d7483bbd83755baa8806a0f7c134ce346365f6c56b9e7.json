{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Code/dating-ai-frontend/src/pages/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Heading, Container } from \"@chakra-ui/react\";\nimport Header from \"../components/Header\";\nimport Conversation from \"../components/Conversation\";\nimport MessageOptions from \"../components/MessageOptions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [selectedResponse, setSelectedResponse] = useState(null);\n  const [options, setOptions] = useState([]);\n  const handleOptionSelection = option => {\n    if (selectedMessage && !selectedResponse) {\n      setSelectedResponse(option);\n    } else {\n      setSelectedMessage(option);\n      setSelectedResponse(null);\n    }\n    fetchOptions(option);\n  };\n  const fetchOptions = async selectedOption => {\n    const type = selectedMessage ? 'response' : 'message';\n    const options = await fetch(`https://example.com/api/${type}s?${type}=${selectedOption}`).then(res => res.json());\n    setOptions(options);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"6xl\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h1\",\n      size: \"2xl\",\n      mb: 10,\n      children: \"Dating AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Conversation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageOptions, {\n      type: \"message\",\n      options: options,\n      onSelect: handleOptionSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), selectedMessage && /*#__PURE__*/_jsxDEV(MessageOptions, {\n      type: \"response\",\n      options: options,\n      onSelect: handleOptionSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), selectedResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected message: \", selectedMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected response: \", selectedResponse]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"cnUMSKpYRzGo0H9MJw659RCPAns=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","Heading","Container","Header","Conversation","MessageOptions","jsxDEV","_jsxDEV","Chat","_s","selectedMessage","setSelectedMessage","selectedResponse","setSelectedResponse","options","setOptions","handleOptionSelection","option","fetchOptions","selectedOption","type","fetch","then","res","json","maxW","children","as","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","_c","$RefreshReg$"],"sources":["/Users/julian/Code/dating-ai-frontend/src/pages/Chat.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Heading, Container } from \"@chakra-ui/react\";\nimport Header from \"../components/Header\";\nimport Conversation from \"../components/Conversation\";\nimport MessageOptions from \"../components/MessageOptions\";\n\nconst Chat = () => {\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [selectedResponse, setSelectedResponse] = useState(null);\n  const [options, setOptions] = useState([]);\n\n  const handleOptionSelection = (option) => {\n    if (selectedMessage && !selectedResponse) {\n      setSelectedResponse(option);\n    } else {\n      setSelectedMessage(option);\n      setSelectedResponse(null);\n    }\n    fetchOptions(option);\n  };\n\n  const fetchOptions = async (selectedOption) => {\n    const type = selectedMessage ? 'response' : 'message';\n    const options = await fetch(`https://example.com/api/${type}s?${type}=${selectedOption}`).then((res) => res.json());\n    setOptions(options);\n  };\n\n  return (\n    <Container maxW='6xl'>\n      <Heading as='h1' size='2xl' mb={10}>Dating AI</Heading>\n      <Header />\n      <Conversation />\n      <MessageOptions type=\"message\" options={options} onSelect={handleOptionSelection} />\n        {selectedMessage && (\n          <MessageOptions type=\"response\" options={options} onSelect={handleOptionSelection} />\n        )}\n        {selectedResponse && (\n          <div>\n            <p>Selected message: {selectedMessage}</p>\n            <p>Selected response: {selectedResponse}</p>\n          </div>\n        )}\n    </Container>\n  );\n};\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}