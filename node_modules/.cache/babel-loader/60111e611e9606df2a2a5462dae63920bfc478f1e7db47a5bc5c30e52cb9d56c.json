{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Code/dating-ai-frontend/src/components/Conversation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Stack, Heading, Flex } from \"@chakra-ui/react\";\nimport Message from \"../components/Message\";\nimport MessageOptions from \"../components/MessageOptions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Conversation = () => {\n  _s();\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    fetchOptions();\n  }, []);\n  const handleOptionSelection = option => {\n    setSelectedMessage(option);\n    fetchOptions(option);\n  };\n  const fetchOptions = async selectedOption => {\n    const options = ['test1', 'test2']; // API Call\n    setOptions(options);\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    w: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      size: \"lg\",\n      children: \"Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      gap: 2,\n      w: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(MessageOptions, {\n        options: options,\n        onSelect: handleOptionSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), selectedMessage && /*#__PURE__*/_jsxDEV(MessageOptions, {\n        options: options,\n        onSelect: handleOptionSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), selectedResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected message: \", selectedMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected response: \", selectedResponse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        isUser: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Conversation, \"iHzDb2K3RYxbLs81tQRDkOsF/+c=\");\n_c = Conversation;\nexport default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useState","useEffect","Stack","Heading","Flex","Message","MessageOptions","jsxDEV","_jsxDEV","Conversation","_s","selectedMessage","setSelectedMessage","options","setOptions","fetchOptions","handleOptionSelection","option","selectedOption","spacing","w","children","as","size","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","gap","onSelect","selectedResponse","isUser","_c","$RefreshReg$"],"sources":["/Users/julian/Code/dating-ai-frontend/src/components/Conversation.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Stack, Heading, Flex } from \"@chakra-ui/react\";\nimport Message from \"../components/Message\";\nimport MessageOptions from \"../components/MessageOptions\";\n\nconst Conversation = () => {\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    fetchOptions();\n  }, []);\n\n  const handleOptionSelection = (option) => {\n    setSelectedMessage(option);\n    fetchOptions(option);\n  };\n\n  const fetchOptions = async (selectedOption) => {\n    const options = ['test1', 'test2']; // API Call\n    setOptions(options);\n  };\n\n  return (\n    <Stack spacing={2} w='100%'>\n      <Heading as='h2' size='lg'>Conversation</Heading>\n      <Flex flexDirection='column' gap={2} w='100%'>\n        <MessageOptions options={options} onSelect={handleOptionSelection} />\n          {selectedMessage && (\n            <MessageOptions options={options} onSelect={handleOptionSelection} />\n          )}\n          {selectedResponse && (\n            <div>\n              <p>Selected message: {selectedMessage}</p>\n              <p>Selected response: {selectedResponse}</p>\n            </div>\n          )}\n        <Message />\n        <Message isUser='true'/>\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default Conversation;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,OAAO,EAAEC,IAAI,QAAQ,kBAAkB;AACvD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdc,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,qBAAqB,GAAIC,MAAM,IAAK;IACxCL,kBAAkB,CAACK,MAAM,CAAC;IAC1BF,YAAY,CAACE,MAAM,CAAC;EACtB,CAAC;EAED,MAAMF,YAAY,GAAG,MAAOG,cAAc,IAAK;IAC7C,MAAML,OAAO,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IACpCC,UAAU,CAACD,OAAO,CAAC;EACrB,CAAC;EAED,oBACEL,OAAA,CAACN,KAAK;IAACiB,OAAO,EAAE,CAAE;IAACC,CAAC,EAAC,MAAM;IAAAC,QAAA,gBACzBb,OAAA,CAACL,OAAO;MAACmB,EAAE,EAAC,IAAI;MAACC,IAAI,EAAC,IAAI;MAAAF,QAAA,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,eACjDnB,OAAA,CAACJ,IAAI;MAACwB,aAAa,EAAC,QAAQ;MAACC,GAAG,EAAE,CAAE;MAACT,CAAC,EAAC,MAAM;MAAAC,QAAA,gBAC3Cb,OAAA,CAACF,cAAc;QAACO,OAAO,EAAEA,OAAQ;QAACiB,QAAQ,EAAEd;MAAsB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAClEhB,eAAe,iBACdH,OAAA,CAACF,cAAc;QAACO,OAAO,EAAEA,OAAQ;QAACiB,QAAQ,EAAEd;MAAsB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnE,EACAI,gBAAgB,iBACfvB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,GAAG,oBAAkB,EAACV,eAAe;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC1CnB,OAAA;UAAAa,QAAA,GAAG,qBAAmB,EAACU,gBAAgB;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAE/C,eACHnB,OAAA,CAACH,OAAO;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACXnB,OAAA,CAACH,OAAO;QAAC2B,MAAM,EAAC;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEZ,CAAC;AAACjB,EAAA,CArCID,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}