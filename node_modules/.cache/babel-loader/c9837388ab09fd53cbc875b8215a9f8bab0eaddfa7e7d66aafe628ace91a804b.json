{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Code/dating-ai-frontend/src/components/Conversation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Stack, Heading, Flex } from \"@chakra-ui/react\";\nimport Message from \"../components/Message\";\nimport MessageOptions from \"../components/MessageOptions\";\nimport { getPickUpLine, getRoot } from '../Api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Conversation = () => {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    fetchOptions();\n  }, []);\n  const handleOptionSelection = option => {\n    fetchOptions(option);\n    setHistory([...history, option]);\n  };\n  const fetchOptions = async selectedOption => {\n    // Request\n    // let data = await getPickUpLine({\n    //     \"profile1\": {\"name\":\"Cathreen\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n    //     \"profile2\": {\"name\":\"Paul\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n    //     \"reply_to\": null,\n    //     \"msg_attr\": [\n    //         \"witty\",\n    //         \"funny\",\n    //         \"curious to know about each other\"\n    //     ],\n    //     \"history\": []\n    // });\n\n    // Response:\n    const data = {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"reply_to\": null,\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": [],\n      \"choices\": [[\"Noodles for dinner? Sounds like a plan!\", \"2) So, we have the same profession and same favorite food..guess we have more in common than we thought!\", \"3) What's the engineering project you're working on right now? Let's see who can solve it first!\", \"From P2 to P1:\", \"1) I heard engineers like a challenge.. care to take one on?\", \"2) Wanna grab some noodles and chat about engineering?\", \"3) I think I found my engineering soulmate!\"]]\n    };\n    if (selectedOption) {\n      options = ['test3', 'test4'];\n    }\n    setOptions(data['choices'][0]);\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    w: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      size: \"lg\",\n      children: \"Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      gap: 2,\n      w: \"100%\",\n      children: [history.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        isUser: index % 2 === 0,\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(MessageOptions, {\n        options: options,\n        onSelect: handleOptionSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Conversation, \"0xI5/oKJQT86uw7B/85PoYRc03o=\");\n_c = Conversation;\nexport default Conversation;\nclass Api {\n  constructor() {\n    this.count = 0;\n  }\n  getPickUpLine() {\n    this.count++;\n  }\n  getFirstRequest() {\n    return {\n      \"profile1\": {\n        \"name\": \"Cathreen\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"profile2\": {\n        \"name\": \"Paul\",\n        \"profession\": \"engineer\",\n        \"favorite food\": \"noodles\"\n      },\n      \"reply_to\": null,\n      \"msg_attr\": [\"witty\", \"funny\", \"curious to know about each other\"],\n      \"history\": [],\n      \"choices\": [[\"Noodles for dinner? Sounds like a plan!\", \"2) So, we have the same profession and same favorite food..guess we have more in common than we thought!\", \"3) What's the engineering project you're working on right now? Let's see who can solve it first!\", \"From P2 to P1:\", \"1) I heard engineers like a challenge.. care to take one on?\", \"2) Wanna grab some noodles and chat about engineering?\", \"3) I think I found my engineering soulmate!\"]]\n    };\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useState","useEffect","Stack","Heading","Flex","Message","MessageOptions","getPickUpLine","getRoot","jsxDEV","_jsxDEV","Conversation","_s","history","setHistory","options","setOptions","fetchOptions","handleOptionSelection","option","selectedOption","data","spacing","w","children","as","size","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","gap","map","message","index","isUser","onSelect","_c","Api","constructor","count","getFirstRequest","$RefreshReg$"],"sources":["/Users/julian/Code/dating-ai-frontend/src/components/Conversation.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Stack, Heading, Flex } from \"@chakra-ui/react\";\nimport Message from \"../components/Message\";\nimport MessageOptions from \"../components/MessageOptions\";\nimport { getPickUpLine, getRoot } from '../Api.js';\n\nconst Conversation = () => {\n  const [history, setHistory] = useState([]);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    fetchOptions();\n  }, []);\n\n  const handleOptionSelection = (option) => {\n    fetchOptions(option);\n    setHistory([...history, option]);\n  };\n\n  const fetchOptions = async (selectedOption) => {\n    // Request\n    // let data = await getPickUpLine({\n    //     \"profile1\": {\"name\":\"Cathreen\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n    //     \"profile2\": {\"name\":\"Paul\", \"profession\":\"engineer\", \"favorite food\":\"noodles\"},\n    //     \"reply_to\": null,\n    //     \"msg_attr\": [\n    //         \"witty\",\n    //         \"funny\",\n    //         \"curious to know about each other\"\n    //     ],\n    //     \"history\": []\n    // });\n\n    // Response:\n    const data = {\n        \"profile1\": {\n            \"name\": \"Cathreen\",\n            \"profession\": \"engineer\",\n            \"favorite food\": \"noodles\"\n        },\n        \"profile2\": {\n            \"name\": \"Paul\",\n            \"profession\": \"engineer\",\n            \"favorite food\": \"noodles\"\n        },\n        \"reply_to\": null,\n        \"msg_attr\": [\n            \"witty\",\n            \"funny\",\n            \"curious to know about each other\"\n        ],\n        \"history\": [],\n        \"choices\": [\n            [\n                \"Noodles for dinner? Sounds like a plan!\",\n                \"2) So, we have the same profession and same favorite food..guess we have more in common than we thought!\",\n                \"3) What's the engineering project you're working on right now? Let's see who can solve it first!\",\n                \"From P2 to P1:\",\n                \"1) I heard engineers like a challenge.. care to take one on?\",\n                \"2) Wanna grab some noodles and chat about engineering?\",\n                \"3) I think I found my engineering soulmate!\"\n            ]\n        ]\n    };\n    if (selectedOption) {\n      options = ['test3', 'test4'];\n    }\n    setOptions(data['choices'][0]);\n  };\n\n  return (\n    <Stack spacing={2} w='100%'>\n      <Heading as='h2' size='lg'>Conversation</Heading>\n      <Flex flexDirection='column' gap={2} w='100%'>\n        {history.map((message, index) => (\n          <Message key={index} isUser={index % 2 === 0}>{message}</Message>\n        ))}\n        <MessageOptions options={options} onSelect={handleOptionSelection} />\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default Conversation;\n\nclass Api {\n    constructor() {\n        this.count = 0;\n    }\n\n    getPickUpLine() {\n\n        this.count++;\n    }\n\n    getFirstRequest() {\n        return {\n            \"profile1\": {\n                \"name\": \"Cathreen\",\n                \"profession\": \"engineer\",\n                \"favorite food\": \"noodles\"\n            },\n            \"profile2\": {\n                \"name\": \"Paul\",\n                \"profession\": \"engineer\",\n                \"favorite food\": \"noodles\"\n            },\n            \"reply_to\": null,\n            \"msg_attr\": [\n                \"witty\",\n                \"funny\",\n                \"curious to know about each other\"\n            ],\n            \"history\": [],\n            \"choices\": [\n                [\n                    \"Noodles for dinner? Sounds like a plan!\",\n                    \"2) So, we have the same profession and same favorite food..guess we have more in common than we thought!\",\n                    \"3) What's the engineering project you're working on right now? Let's see who can solve it first!\",\n                    \"From P2 to P1:\",\n                    \"1) I heard engineers like a challenge.. care to take one on?\",\n                    \"2) Wanna grab some noodles and chat about engineering?\",\n                    \"3) I think I found my engineering soulmate!\"\n                ]\n            ]\n        };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}